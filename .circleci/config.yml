version: 2

jobs:
  # DockerのビルドとECRへのpush
  # 
  # 以下の環境変数をCircleCIで定義してください。　
  # - AWS_ACCOUNT_ID
  #    - プロビジョニング対象のAWSアカウントID
  # - AWS_ACCESS_KEY_ID
  #    - プロビジョニング対象のAWSアクセスキー
  # - AWS_SECRET_ACCESS_KEY
  #    - プロビジョニング対象のAWSシークレットアクセスキー
  docker_push:
    docker:
      - image: circleci/python:3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: ECR login
          command: |
            sudo pip install awscli
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
      - run:
          name: ECR push
          command: |
            docker build -t ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/app:${CIRCLE_SHA1}-migrate --target build .
            docker push ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/app:${CIRCLE_SHA1}-migrate
            docker build -t ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/app:${CIRCLE_SHA1} .
            docker push ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/app:${CIRCLE_SHA1}

  # terraformでプロビジョニングの実行
  # 
  # 以下の環境変数をCircleCIで定義してください。　
  # - AWS_ACCESS_KEY_ID
  #    - プロビジョニング対象のAWSアクセスキー
  # - AWS_SECRET_ACCESS_KEY
  #    - プロビジョニング対象のAWSシークレットアクセスキー
  provisioning:
    docker:
      - image: hashicorp/terraform:0.12.18
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: 
          command: |
            terraform init
            terraform workspace select prd
            terraform apply -auto-approve -var "image_tag=${CIRCLE_SHA1}"

workflows:
  version: 2

  # タグを切ったタイミングで本番へデプロイを行う
  deploy:
    jobs:
      - docker_push:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - provisioning:
          requires:
            - docker_push
